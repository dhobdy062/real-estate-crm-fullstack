
Design Principles:

Normalization: The schema aims for a good level of normalization (around 3NF) to reduce data redundancy and improve data integrity, while balancing query performance.
Clarity: Table and column names are chosen to be descriptive. snake_case is used for naming.
Relationships: Foreign keys are used extensively to enforce relationships between tables. Default ON DELETE behavior is RESTRICT unless otherwise specified (like CASCADE for junction table entries or SET NULL for optional relationships).
Timestamps: Standard created_at and updated_at columns are included in most tables for auditing and tracking purposes.
Scalability: Data types like BIGINT for IDs and TIMESTAMP WITH TIME ZONE are used. Indexing strategies are outlined.

Core Entities & Management:

users

Purpose: Stores information about the real estate professionals using the CRM.
Columns:
id BIGINT PRIMARY KEY AUTO_INCREMENT
first_name VARCHAR(100) NOT NULL
last_name VARCHAR(100) NOT NULL
email VARCHAR(255) UNIQUE NOT NULL   
phone_number VARCHAR(30)
password_hash VARCHAR(255) NOT NULL
role_id INT NOT NULL (FK references roles.id)
is_active BOOLEAN DEFAULT TRUE
license_number VARCHAR(100)
created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP   
Indexes: idx_users_email, idx_users_role_id
roles

Purpose: Defines user roles for permissions.
Columns:
id INT PRIMARY KEY AUTO_INCREMENT
role_name VARCHAR(50) UNIQUE NOT NULL (e.g., 'Admin', 'Agent', 'Assistant')
description TEXT
Indexes: idx_roles_role_name
contacts

Purpose: Central repository for individuals (clients, leads converted to clients, partners, etc.).
Columns:
id BIGINT PRIMARY KEY AUTO_INCREMENT
first_name VARCHAR(100)
last_name VARCHAR(100)
email VARCHAR(255) NULLABLE UNIQUE (Can be null initially, but unique if present)
phone_primary VARCHAR(30)
phone_secondary VARCHAR(30)
address_street VARCHAR(255)
address_city VARCHAR(100)
address_state VARCHAR(50)
address_zip VARCHAR(20)
address_country VARCHAR(50)
preferred_contact_method VARCHAR(50) (e.g., 'Email', 'Phone', 'SMS')
relationship_notes TEXT
owner_user_id BIGINT NULLABLE (FK references users.id ON DELETE SET NULL) - Assigns contact ownership
created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP   
Indexes: idx_contacts_email, idx_contacts_phone_primary, idx_contacts_owner_user_id, idx_contacts_last_name_first_name
tags

Purpose: Defines reusable tags for categorizing contacts, leads, etc.
Columns:
id INT PRIMARY KEY AUTO_INCREMENT
tag_name VARCHAR(50) UNIQUE NOT NULL (e.g., 'Buyer', 'Seller', 'Investor', 'Past Client', 'Hot Lead')
tag_color VARCHAR(7) # Hex color code
Indexes: idx_tags_tag_name
contact_tags (Junction Table)

Purpose: Links contacts to tags (Many-to-Many).
Columns:
contact_id BIGINT NOT NULL (FK references contacts.id ON DELETE CASCADE)
tag_id INT NOT NULL (FK references tags.id ON DELETE CASCADE)
PRIMARY KEY (contact_id, tag_id)
Lead Management:

lead_sources

Purpose: Defines the origins of leads.
Columns:
id INT PRIMARY KEY AUTO_INCREMENT
source_name VARCHAR(100) UNIQUE NOT NULL (e.g., 'Website Form', 'Zillow', 'Realtor.com', 'Manual Entry', 'Social Media')
source_type VARCHAR(50) (e.g., 'Online', 'Referral', 'Offline')
Indexes: idx_lead_sources_source_name
pipeline_statuses

Purpose: Defines customizable stages in the lead/sales pipeline.
Columns:
id INT PRIMARY KEY AUTO_INCREMENT
status_name VARCHAR(50) UNIQUE NOT NULL (e.g., 'New', 'Contacted', 'Qualified', 'Nurturing', 'Appointment Set', 'Closed - Won', 'Closed - Lost')
stage_order INT NOT NULL DEFAULT 0 -- For ordering statuses in the UI
status_category VARCHAR(20) NOT NULL (e.g. 'Lead', 'Opportunity', 'Closed') -- Grouping
Indexes: idx_pipeline_statuses_status_name, idx_pipeline_statuses_stage_order
leads

Purpose: Captures potential client information before they become confirmed contacts or associated with a transaction.
Columns:
id BIGINT PRIMARY KEY AUTO_INCREMENT
first_name VARCHAR(100)
last_name VARCHAR(100)
email VARCHAR(255)
phone_number VARCHAR(30)
lead_source_id INT NOT NULL (FK references lead_sources.id)
pipeline_status_id INT NOT NULL (FK references pipeline_statuses.id)
inquiry_details TEXT (e.g., property address inquired about, message content)
lead_score INT DEFAULT 0 -- Automated scoring based on actions/profile
assigned_user_id BIGINT NULLABLE (FK references users.id ON DELETE SET NULL) -- Lead owner
converted_contact_id BIGINT NULLABLE UNIQUE (FK references contacts.id ON DELETE SET NULL) -- Link if converted
converted_at TIMESTAMP WITH TIME ZONE NULLABLE
external_lead_id VARCHAR(100) -- ID from external source like Zillow
created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP   
Indexes: idx_leads_email, idx_leads_phone_number, idx_leads_lead_source_id, idx_leads_pipeline_status_id, idx_leads_assigned_user_id, idx_leads_converted_contact_id
lead_tags (Junction Table)

Purpose: Links leads to tags (Many-to-Many).
Columns:
lead_id BIGINT NOT NULL (FK references leads.id ON DELETE CASCADE)
tag_id INT NOT NULL (FK references tags.id ON DELETE CASCADE)
PRIMARY KEY (lead_id, tag_id)
Communication & Automation:

communication_templates

Purpose: Stores reusable email, SMS, or video email templates.
Columns:
id BIGINT PRIMARY KEY AUTO_INCREMENT
template_name VARCHAR(150) NOT NULL
template_type VARCHAR(20) NOT NULL (e.g., 'Email', 'SMS', 'Video Script')
subject VARCHAR(255) NULLABLE -- For email
body_content TEXT NOT NULL
is_active BOOLEAN DEFAULT TRUE
created_by_user_id BIGINT (FK references users.id)
created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP   
Indexes: idx_comm_templates_type_name
communications

Purpose: Logs all communication events.
Columns:
id BIGINT PRIMARY KEY AUTO_INCREMENT
communication_type VARCHAR(20) NOT NULL (e.g., 'Email', 'SMS', 'Video Email', 'Call Log', 'Note')
direction VARCHAR(10) NOT NULL (e.g., 'Outbound', 'Inbound')
status VARCHAR(20) NOT NULL (e.g., 'Scheduled', 'Sent', 'Delivered', 'Opened', 'Clicked', 'Failed', 'Received', 'Logged')
subject VARCHAR(255) NULLABLE -- Email subject
message_content TEXT -- Email body, SMS text, call notes
timestamp TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
lead_id BIGINT NULLABLE (FK references leads.id ON DELETE SET NULL)
contact_id BIGINT NULLABLE (FK references contacts.id ON DELETE SET NULL)
user_id BIGINT NULLABLE (FK references users.id ON DELETE SET NULL) -- User who sent/logged
template_id BIGINT NULLABLE (FK references communication_templates.id ON DELETE SET NULL)
campaign_step_id BIGINT NULLABLE (FK references campaign_steps.id ON DELETE SET NULL) -- Link to drip campaign
external_message_id VARCHAR(255) NULLABLE -- ID from email/SMS provider
scheduled_time TIMESTAMP WITH TIME ZONE NULLABLE -- For scheduled communications
Indexes: idx_communications_lead_id, idx_communications_contact_id, idx_communications_user_id, idx_communications_timestamp, idx_communications_type_status
Check Constraint: CHECK (lead_id IS NOT NULL OR contact_id IS NOT NULL) -- Must be associated with a lead or contact
email_campaigns

Purpose: Defines automated drip campaigns.
Columns:
id BIGINT PRIMARY KEY AUTO_INCREMENT
campaign_name VARCHAR(150) NOT NULL
description TEXT
is_active BOOLEAN DEFAULT TRUE
trigger_condition VARCHAR(255) -- Description or rule (e.g., "New Lead from Website", "Contact Tagged 'Nurturing'")
created_by_user_id BIGINT (FK references users.id)
created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP   
Indexes: idx_email_campaigns_name
campaign_steps

Purpose: Defines individual steps within a drip campaign.
Columns:
id BIGINT PRIMARY KEY AUTO_INCREMENT
email_campaign_id BIGINT NOT NULL (FK references email_campaigns.id ON DELETE CASCADE)
step_order INT NOT NULL
delay_days INT DEFAULT 0 -- Delay in days after previous step or start
delay_hours INT DEFAULT 0 -- Fine-grained delay
communication_template_id BIGINT NOT NULL (FK references communication_templates.id)
step_name VARCHAR(100)
Indexes: idx_campaign_steps_campaign_id_order
campaign_subscriptions

Purpose: Tracks which leads/contacts are currently active in which campaigns.
Columns:
id BIGINT PRIMARY KEY AUTO_INCREMENT
email_campaign_id BIGINT NOT NULL (FK references email_campaigns.id ON DELETE CASCADE)
lead_id BIGINT NULLABLE (FK references leads.id ON DELETE CASCADE)
contact_id BIGINT NULLABLE (FK references contacts.id ON DELETE CASCADE)
status VARCHAR(20) NOT NULL (e.g., 'Active', 'Paused', 'Completed', 'Unsubscribed')
current_step_id BIGINT NULLABLE (FK references campaign_steps.id ON DELETE SET NULL)
next_step_due_time TIMESTAMP WITH TIME ZONE NULLABLE
started_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
completed_at TIMESTAMP WITH TIME ZONE NULLABLE
Indexes: idx_campaign_sub_lead_id, idx_campaign_sub_contact_id, idx_campaign_sub_campaign_id, idx_campaign_sub_status_due_time
Check Constraint: CHECK (lead_id IS NOT NULL OR contact_id IS NOT NULL)
Transaction Tracking:

properties

Purpose: Stores details about real estate properties involved in transactions or associated with contacts.
Columns:
id BIGINT PRIMARY KEY AUTO_INCREMENT
address_street VARCHAR(255) NOT NULL
address_city VARCHAR(100) NOT NULL
address_state VARCHAR(50) NOT NULL
address_zip VARCHAR(20) NOT NULL
address_country VARCHAR(50) DEFAULT 'USA'
property_type VARCHAR(50) (e.g., 'Single Family', 'Condo', 'Townhouse', 'Land')
bedrooms INT
bathrooms DECIMAL(3,1)
square_footage INT
year_built INT
lot_size DECIMAL(10,2)
lot_units VARCHAR(10) (e.g., 'sqft', 'acres')
mls_number VARCHAR(50) UNIQUE NULLABLE
listing_status VARCHAR(50) (e.g., 'For Sale', 'Pending', 'Sold', 'Off Market')
notes TEXT
created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP   
Indexes: idx_properties_address, idx_properties_mls_number
transaction_statuses

Purpose: Defines stages for a transaction/deal.
Columns:
id INT PRIMARY KEY AUTO_INCREMENT
status_name VARCHAR(50) UNIQUE NOT NULL (e.g., 'Prospecting', 'Showing', 'Offer Made', 'Under Contract', 'Appraisal', 'Closing', 'Funded', 'Completed', 'Cancelled')
stage_order INT NOT NULL DEFAULT 0
Indexes: idx_transaction_statuses_name, idx_transaction_statuses_order
transactions (Deals)

Purpose: Manages the buying/selling process.
Columns:
id BIGINT PRIMARY KEY AUTO_INCREMENT
transaction_name VARCHAR(255) -- e.g., "123 Main St Purchase - John Doe"
property_id BIGINT NOT NULL (FK references properties.id)
transaction_type VARCHAR(10) NOT NULL (e.g., 'Buy', 'Sell', 'Lease')
transaction_status_id INT NOT NULL (FK references transaction_statuses.id)
estimated_close_date DATE
actual_close_date DATE
price DECIMAL(15, 2)
commission_percentage DECIMAL(5, 2)
commission_amount DECIMAL(15, 2)
agent_user_id BIGINT NOT NULL (FK references users.id) -- Primary agent responsible
created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP   
Indexes: idx_transactions_property_id, idx_transactions_status_id, idx_transactions_agent_user_id, idx_transactions_close_date
transaction_contacts (Junction Table)

Purpose: Links contacts to transactions and defines their role (Many-to-Many).
Columns:
transaction_id BIGINT NOT NULL (FK references transactions.id ON DELETE CASCADE)
contact_id BIGINT NOT NULL (FK references contacts.id ON DELETE CASCADE)
role VARCHAR(50) NOT NULL (e.g., 'Buyer', 'Seller', 'Co-Agent', 'Lender', 'Inspector', 'Title Officer')
PRIMARY KEY (transaction_id, contact_id, role) -- Role included in PK to allow same contact multiple roles (though perhaps rare)
transaction_milestones

Purpose: Defines standard milestones for different transaction types.
Columns:
id BIGINT PRIMARY KEY AUTO_INCREMENT
milestone_name VARCHAR(100) NOT NULL
transaction_type VARCHAR(10) NULLABLE (e.g., 'Buy', 'Sell' - NULL means applies to all)
default_order INT
description TEXT
Indexes: idx_tx_milestones_type_order
transaction_checklist_items

Purpose: Tracks specific milestones/tasks for an individual transaction.
Columns:
id BIGINT PRIMARY KEY AUTO_INCREMENT
transaction_id BIGINT NOT NULL (FK references transactions.id ON DELETE CASCADE)
milestone_id BIGINT NULLABLE (FK references transaction_milestones.id ON DELETE SET NULL) -- Link to standard milestone
item_description VARCHAR(255) NOT NULL -- Can override or be custom
due_date DATE NULLABLE
completed_date TIMESTAMP WITH TIME ZONE NULLABLE
is_completed BOOLEAN DEFAULT FALSE
assigned_user_id BIGINT NULLABLE (FK references users.id ON DELETE SET NULL)
notes TEXT
Indexes: idx_tx_checklist_tx_id, idx_tx_checklist_due_date, idx_tx_checklist_completed
Workflow & Task Automation:

workflows

Purpose: Defines templates for automated sequences of tasks or actions.
Columns:
id BIGINT PRIMARY KEY AUTO_INCREMENT
workflow_name VARCHAR(150) NOT NULL
trigger_entity VARCHAR(20) NOT NULL (e.g., 'Lead', 'Contact', 'Transaction')
trigger_condition TEXT NOT NULL -- Describes or stores rules (e.g., "Lead Status = Qualified", "Transaction Milestone = Under Contract")
description TEXT
is_active BOOLEAN DEFAULT TRUE
created_by_user_id BIGINT (FK references users.id)
created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP   
Indexes: idx_workflows_name, idx_workflows_trigger_entity
workflow_steps

Purpose: Defines individual actions within a workflow template.
Columns:
id BIGINT PRIMARY KEY AUTO_INCREMENT
workflow_id BIGINT NOT NULL (FK references workflows.id ON DELETE CASCADE)
step_order INT NOT NULL
action_type VARCHAR(50) NOT NULL (e.g., 'Create Task', 'Send Email', 'Update Field', 'Add Tag')
action_details JSONB -- Store parameters for the action (e.g., task details, template_id, field name/value, tag_id)
delay_days INT DEFAULT 0
delay_hours INT DEFAULT 0
step_name VARCHAR(100)
Indexes: idx_workflow_steps_workflow_id_order
tasks

Purpose: Stores individual tasks, whether manually created or generated by workflows.
Columns:
id BIGINT PRIMARY KEY AUTO_INCREMENT
task_title VARCHAR(255) NOT NULL
description TEXT
due_date TIMESTAMP WITH TIME ZONE NULLABLE
status VARCHAR(20) NOT NULL DEFAULT 'Pending' (e.g., 'Pending', 'In Progress', 'Completed', 'Deferred')
priority VARCHAR(20) DEFAULT 'Normal' (e.g., 'Low', 'Normal', 'High', 'Urgent')
assigned_user_id BIGINT NULLABLE (FK references users.id ON DELETE SET NULL)
created_by_user_id BIGINT NULLABLE (FK references users.id ON DELETE SET NULL)
completed_at TIMESTAMP WITH TIME ZONE NULLABLE
related_lead_id BIGINT NULLABLE (FK references leads.id ON DELETE CASCADE)
related_contact_id BIGINT NULLABLE (FK references contacts.id ON DELETE CASCADE)
related_transaction_id BIGINT NULLABLE (FK references transactions.id ON DELETE CASCADE)
created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP   
Indexes: idx_tasks_assigned_user_id_status, idx_tasks_due_date, idx_tasks_related_lead, idx_tasks_related_contact, idx_tasks_related_transaction
Marketing Tools:

marketing_campaigns

Purpose: Tracks distinct marketing initiatives (different from automated drip campaigns).
Columns:
id BIGINT PRIMARY KEY AUTO_INCREMENT
campaign_name VARCHAR(150) NOT NULL
campaign_type VARCHAR(50) (e.g., 'Email Blast', 'Newsletter', 'Social Media Ad', 'Event')
goal TEXT
start_date DATE
end_date DATE
status VARCHAR(20) (e.g., 'Planning', 'Active', 'Completed', 'Cancelled')
budget DECIMAL(15, 2)
created_by_user_id BIGINT (FK references users.id)
created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP   
Indexes: idx_mkt_campaigns_name_type, idx_mkt_campaigns_status
segments

Purpose: Defines criteria for dynamic marketing lists.
Columns:
id BIGINT PRIMARY KEY AUTO_INCREMENT
segment_name VARCHAR(150) NOT NULL
description TEXT
criteria_definition JSONB NOT NULL -- Stores rules (e.g., {"tag": "Buyer", "last_contacted_days": ">90"})
entity_type VARCHAR(20) NOT NULL DEFAULT 'Contact' -- Could be Lead or Contact
created_by_user_id BIGINT (FK references users.id)
created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP   
Indexes: idx_segments_name
marketing_materials

Purpose: Library of reusable assets like stock photos, logos, document templates.
Columns:
id BIGINT PRIMARY KEY AUTO_INCREMENT
material_name VARCHAR(150) NOT NULL
material_type VARCHAR(50) (e.g., 'Image', 'Document', 'Video Snippet')
file_path_or_url VARCHAR(500) NOT NULL
description TEXT
tags VARCHAR(255) -- Comma-separated or link to tags table
uploaded_by_user_id BIGINT (FK references users.id)
created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
Indexes: idx_mkt_materials_name_type
Mobile & Integration:

user_devices

Purpose: Stores device tokens for push notifications.
Columns:
id BIGINT PRIMARY KEY AUTO_INCREMENT
user_id BIGINT NOT NULL (FK references users.id ON DELETE CASCADE)
device_type VARCHAR(20) NOT NULL (e.g., 'iOS', 'Android', 'Web')
device_token VARCHAR(500) UNIQUE NOT NULL
last_login TIMESTAMP WITH TIME ZONE
created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
Indexes: idx_user_devices_user_id, idx_user_devices_token
notifications

Purpose: Logs notifications sent to users (mobile or web).
Columns:
id BIGINT PRIMARY KEY AUTO_INCREMENT
user_id BIGINT NOT NULL (FK references users.id ON DELETE CASCADE)
message TEXT NOT NULL
notification_type VARCHAR(50) (e.g., 'New Lead Assigned', 'Task Due', 'Transaction Update')
is_read BOOLEAN DEFAULT FALSE
read_at TIMESTAMP WITH TIME ZONE NULLABLE
related_entity_type VARCHAR(20) NULLABLE (e.g., 'Lead', 'Task', 'Transaction')
related_entity_id BIGINT NULLABLE
created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
Indexes: idx_notifications_user_id_read, idx_notifications_related_entity
integrations

Purpose: Stores configuration and credentials for third-party integrations.
Columns:
id INT PRIMARY KEY AUTO_INCREMENT
service_name VARCHAR(100) UNIQUE NOT NULL (e.g., 'Zillow API', 'Realtor.com Leads', 'Mailchimp', 'Google Calendar')
api_key TEXT NULLABLE -- Store encrypted
api_secret TEXT NULLABLE -- Store encrypted
oauth_token TEXT NULLABLE -- Store encrypted
refresh_token TEXT NULLABLE -- Store encrypted
token_expiry TIMESTAMP WITH TIME ZONE NULLABLE
account_identifier VARCHAR(255) NULLABLE -- e.g., User ID or email for the service
is_enabled BOOLEAN DEFAULT FALSE
last_sync_time TIMESTAMP WITH TIME ZONE NULLABLE
sync_status VARCHAR(50) NULLABLE (e.g., 'Success', 'Failed', 'Running')
configuration_details JSONB NULLABLE -- Other service-specific settings
Indexes: idx_integrations_service_name, idx_integrations_is_enabled
Data Integrity, Performance & Scalability Considerations:

Data Integrity:

Foreign Keys: Enforced via FOREIGN KEY constraints.
NOT NULL: Applied where data is essential.
UNIQUE Constraints: Used for emails, names of lookup entities (sources, statuses, tags), external IDs where appropriate.
Check Constraints: Used where needed (e.g., ensuring a communication links to either a lead or contact).
Data Types: Appropriate types used (e.g., TIMESTAMP WITH TIME ZONE for accuracy, DECIMAL for currency).
Encryption: Sensitive fields like API keys/tokens in integrations must be encrypted at the application layer before storing and decrypted when used.
Performance:

Indexing: Primary Keys are inherently indexed. Foreign Keys should always be indexed. Additional indexes are added to columns frequently used in WHERE clauses, JOIN conditions, and ORDER BY clauses (e.g., statuses, timestamps, user assignments, email/phone). Composite indexes are used where multiple columns are often queried together (e.g., last_name, first_name).
Query Optimization: Complex queries involving multiple joins (e.g., finding contacts matching segment criteria) need careful construction and analysis (EXPLAIN ANALYZE). Materialized views could be considered for complex reporting or segment generation if performance becomes an issue.
Connection Pooling: Essential at the application layer.
Avoid SELECT *: Select only necessary columns.
Scalability:

Vertical Scaling: Start with a capable database server.
Read Replicas: Can be added to handle high read loads (reporting, dashboards).
Partitioning: Large, time-series tables like communications and notifications (and potentially audit_logs if added) can be partitioned by date range (e.g., monthly or yearly) to improve query performance and manageability as they grow.
Database Choice: Designed with PostgreSQL in mind (due to features like JSONB), but adaptable to other modern relational databases. For extreme scale, NoSQL components or a distributed SQL database might be explored later, but this relational design provides a strong foundation.
Archiving: Implement strategies for archiving old, inactive data (e.g., communications older than X years, closed leads from Y years ago) to keep active tables smaller.
This schema provides a robust foundation for a feature-rich Real Estate CRM, addressing the core requirements while considering future growth and maintainability.

Front end examples
// Example TypeScript interfaces for front-end data models

// Represents a User (Agent/Admin etc.)
interface User {
  id: number;
  firstName: string;
  lastName: string;
  email: string;
  phoneNumber?: string | null; // Optional field
  roleId: number; // Reference to Role
  isActive: boolean;
  licenseNumber?: string | null;
  createdAt: string; // Typically ISO date strings from APIs
  updatedAt: string;
}

// Represents a Contact
interface Contact {
  id: number;
  firstName?: string | null;
  lastName?: string | null;
  email?: string | null;
  phonePrimary?: string | null;
  phoneSecondary?: string | null;
  addressStreet?: string | null;
  addressCity?: string | null;
  addressState?: string | null;
  addressZip?: string | null;
  addressCountry?: string | null;
  preferredContactMethod?: string | null;
  relationshipNotes?: string | null;
  ownerUserId?: number | null; // ID of the owning User
  owner?: User | null; // Optionally populated owner details
  tags?: Tag[]; // Array of associated tags
  createdAt: string;
  updatedAt: string;
}

// Represents a Lead
interface Lead {
  id: number;
  firstName?: string | null;
  lastName?: string | null;
  email?: string | null;
  phoneNumber?: string | null;
  leadSourceId: number; // ID of the LeadSource
  pipelineStatusId: number; // ID of the PipelineStatus
  inquiryDetails?: string | null;
  leadScore: number;
  assignedUserId?: number | null; // ID of the assigned User
  assignedUser?: User | null; // Optionally populated assigned user details
  convertedContactId?: number | null; // ID if converted
  convertedAt?: string | null;
  externalLeadId?: string | null;
  tags?: Tag[]; // Array of associated tags
  createdAt: string;
  updatedAt: string;
}

// Represents a Tag
interface Tag {
  id: number;
  tagName: string;
  tagColor?: string | null;
}

// Represents a Communication record
interface Communication {
  id: number;
  communicationType: 'Email' | 'SMS' | 'Video Email' | 'Call Log' | 'Note';
  direction: 'Outbound' | 'Inbound';
  status: 'Scheduled' | 'Sent' | 'Delivered' | 'Opened' | 'Clicked' | 'Failed' | 'Received' | 'Logged';
  subject?: string | null;
  messageContent?: string | null;
  timestamp: string;
  leadId?: number | null; // Associated Lead ID
  contactId?: number | null; // Associated Contact ID
  userId?: number | null; // User who initiated/logged
  templateId?: number | null; // Template used
  campaignStepId?: number | null; // Drip campaign step
  externalMessageId?: string | null;
  scheduledTime?: string | null;
}

// Represents a Property
interface Property {
  id: number;
  addressStreet: string;
  addressCity: string;
  addressState: string;
  addressZip: string;
  addressCountry?: string | null;
  propertyType?: string | null;
  bedrooms?: number | null;
  bathrooms?: number | null; // Use number for decimals like 2.5
  squareFootage?: number | null;
  yearBuilt?: number | null;
  lotSize?: number | null;
  lotUnits?: string | null;
  mlsNumber?: string | null;
  listingStatus?: string | null;
  notes?: string | null;
  createdAt: string;
  updatedAt: string;
}

// Represents a Transaction (Deal)
interface Transaction {
  id: number;
  transactionName?: string | null;
  propertyId: number; // ID of the Property
  property?: Property | null; // Optionally populated property details
  transactionType: 'Buy' | 'Sell' | 'Lease';
  transactionStatusId: number; // ID of the TransactionStatus
  estimatedCloseDate?: string | null; // Date string
  actualCloseDate?: string | null; // Date string
  price?: number | null;
  commissionPercentage?: number | null;
  commissionAmount?: number | null;
  agentUserId: number; // ID of the primary User agent
  agent?: User | null; // Optionally populated agent details
  contacts?: TransactionContact[]; // Associated contacts and their roles
  checklistItems?: TransactionChecklistItem[]; // Associated checklist items
  createdAt: string;
  updatedAt: string;
}

// Represents the link between a Transaction and a Contact
interface TransactionContact {
  contactId: number;
  role: string; // e.g., 'Buyer', 'Seller', 'Lender'
  contact?: Contact | null; // Optionally populated contact details
}

// Represents a checklist item for a Transaction
interface TransactionChecklistItem {
    id: number;
    transactionId: number;
    milestoneId?: number | null;
    itemDescription: string;
    dueDate?: string | null;
    completedDate?: string | null;
    isCompleted: boolean;
    assignedUserId?: number | null;
    assignedUser?: User | null;
    notes?: string | null;
}

// Add other interfaces as needed for:
// Roles, LeadSources, PipelineStatuses, CommunicationTemplates,
// EmailCampaigns, CampaignSteps, CampaignSubscriptions, TransactionStatuses,
// TransactionMilestones, Workflows, WorkflowSteps, Tasks, MarketingCampaigns,
// Segments, MarketingMaterials, UserDevices, Notifications, Integrations

Real Estate CRM: Modern UX Design Concept
This document outlines a modern UX design for the Real Estate CRM, focusing on empowering real estate professionals with an intuitive, efficient, and data-driven interface.

Core Principles:

Clarity & Simplicity: Minimalist aesthetic, ample whitespace, clear typography, and intuitive iconography. Avoid clutter.

Efficiency: Streamline common workflows (adding leads, logging calls, updating deals). Minimize clicks and navigation effort.

Data-Driven: Surface key information proactively. Dashboards and contextual views provide immediate insights.

Action-Oriented: Make it easy to take the next step from anywhere in the application (e.g., add task from contact view, send email from lead view).

Contextual: Display relevant information based on the current entity being viewed (e.g., show all communications for a specific contact).

Responsive: Seamless experience across desktop, tablet, and mobile devices.

Consistency: Maintain uniform design patterns, terminology, and interactions throughout the application.

Key Screens & Modules:

Dashboard (Home Screen):

Purpose: Provides a high-level overview and quick access to urgent items.

Key Components:

KPI Cards: Customizable cards showing key metrics (e.g., New Leads Today/Week, Tasks Due Today, Active Transactions, Recent Closings, Lead Score Trends).

Upcoming Tasks/Events: A list or calendar view of tasks and appointments due soon.

Recent Activity Feed: Chronological list of recent communications, lead updates, status changes across the user's portfolio.

Quick Actions: Buttons/links for common tasks like "Add Lead," "Add Contact," "Log Call," "Create Task."

Pipeline Overview: A summarized visual (e.g., bar chart) of leads/transactions by status.

Data Connection: Fetches aggregated data, user-specific tasks, recent communication logs, lead/transaction summaries.

Lead Management:

List View:

Purpose: View, filter, sort, and manage all leads.

Key Components: Configurable data table displaying key lead info (firstName, lastName, leadSource, pipelineStatus, leadScore, assignedUser, createdAt). Use visual tags/pills for status and source. Advanced filtering (by source, status, assigned user, date range, tags) and sorting options. Bulk actions (assign, change status, add tag).

Detail View (Lead Profile):

Purpose: Comprehensive view of a single lead.

Key Components:

Header: Lead name, score, status (changeable), key contact info, quick action buttons (Log Call, Send Email, Add Task, Convert to Contact).

Tabs/Sections:

Details: All fields from the Lead model, including custom fields.

Communications: Chronological list of all associated Communication records (emails, calls, SMS). Ability to add new communications directly.

Tasks: List of associated Task records. Ability to add/edit tasks.

Notes: Free-form notes area.

Activity History: Audit trail of changes made to the lead.

Data Connection: List view fetches paginated/filtered leads. Detail view fetches a specific Lead record and its related Communication, Task, Tag, etc., records. Updates (like changing status) trigger API calls.

Contact Management:

List View: Similar structure to Lead List View (table, filtering, sorting, bulk actions) but focused on Contact data (name, email, phone, ownerUser, tags, lastContacted).

Detail View (Contact Profile): Similar structure to Lead Detail View.

Key Components: Header with contact info, owner, quick actions. Tabs/Sections for Details, Communications, Tasks, Associated Transactions, Properties (owned/interested), Notes, Activity History.

Data Connection: Similar to Leads, fetching Contact lists and detailed profiles with related entities (Communication, Task, TransactionContact, Tag).

Transaction Management (Deals):

Pipeline View (Kanban):

Purpose: Visualize deals moving through stages.

Key Components: Columns representing TransactionStatus stages. Cards representing individual Transaction records, showing key info (name, price, contact, close date). Drag-and-drop functionality to change status. Filtering by agent, type, status.

List View: Alternative table view similar to Leads/Contacts lists.

Detail View (Transaction Profile):

Purpose: Manage all aspects of a single deal.

Key Components: Header with transaction name, status, key dates, price, primary agent. Tabs/Sections for Details, Associated Contacts (Buyers, Sellers, Lender etc. via TransactionContact), Property Details (Property), Checklist (TransactionChecklistItem - interactive, checkable items with due dates), Communications, Tasks, Notes, Documents (requires file storage integration), Activity History.

Data Connection: Fetches Transaction data, related Property, TransactionContact (potentially with nested Contact details), TransactionChecklistItem, Communication, Task. Updates trigger API calls.

Communication Hub:

Purpose: Centralized view of all communications across leads/contacts, potentially integrating with email/SMS providers.

Key Components: Unified inbox/log view. Filterable by type (Email, SMS, Call), direction, contact/lead, user. Ability to initiate new communications. View threaded conversations.

Data Connection: Primarily queries the Communications table, linking to Lead and Contact for context. Requires integration setup (Integrations table) for direct sending/receiving.

Task Management:

Purpose: View and manage all tasks assigned to the user.

Key Components: List view (table or cards) showing Task details (title, due date, priority, status, related entity). Filtering (by due date, status, priority, related entity). Calendar view option. Quick add task functionality.

Data Connection: Fetches Task records, often filtered by assignedUserId and status.

Global Search:

Purpose: Quickly find any Lead, Contact, Transaction, or Property.

Key Components: Prominent search bar in the main navigation. Results page categorizing findings by entity type.

Data Connection: Hits dedicated search API endpoints that query indexed fields across multiple tables.

Settings:

Purpose: Manage user profile, system settings, integrations, and customizations.

Key Components: Sections for Profile Management, Pipeline Status Customization (PipelineStatuses, TransactionStatuses), Tag Management (Tags), Workflow Builder (UI for Workflows and WorkflowSteps), Integration Management (Integrations), Template Editor (CommunicationTemplates).

Data Connection: Interacts with various configuration tables.

UI Elements & Patterns:

Data Tables: Sortable, filterable, configurable columns.

Forms: Clean, well-labeled input fields, clear validation messages.

Modals: Used for quick actions like logging calls, adding tasks, or confirming deletions.

Cards: Used in dashboards and Kanban views to summarize information concisely.

Tags/Pills: Visually represent statuses, sources, or custom tags.

Notifications: Subtle indicators for new activities or alerts (can leverage the Notifications table). Toast messages for action confirmations.

Navigation: Typically a persistent sidebar for main modules and a top bar for global search, user profile, and notifications.

Mobile Considerations:

Prioritize key information and actions for smaller screens.

Use responsive layouts that adapt gracefully.

Focus on quick access to contact details, task lists, calendar, and logging communications (calls/notes).

Leverage mobile-specific features like push notifications (using UserDevices and Notifications).

Connecting to Backend:

This UX design assumes the existence of a well-defined API (likely REST or GraphQL) that allows the front end to:

Fetch lists of entities (Leads, Contacts, etc.) with filtering, sorting, and pagination.

Fetch detailed information for a single entity, including its related data (e.g., a Contact and their Communications).

Create, update, and delete entities.

Perform specific actions (e.g., convert lead, complete task, send email).

The front-end models (frontend_models_ts) define the structure of data exchanged via these API calls.

Conclusion:

This modern UX approach aims to create a Real Estate CRM that is not just functional but also enjoyable and efficient to use. By focusing on clarity, streamlining workflows, and surfacing relevant data, it empowers real estate professionals to manage their business more effectively. 
erDiagram
    USERS {
        BIGINT id PK
        VARCHAR first_name
        VARCHAR last_name
        VARCHAR email UK
        VARCHAR phone_number
        VARCHAR password_hash
        INT role_id FK
        BOOLEAN is_active
        VARCHAR license_number
        TIMESTAMP created_at
        TIMESTAMP updated_at
    }
    ROLES {
        INT id PK
        VARCHAR role_name UK
        TEXT description
    }
    CONTACTS {
        BIGINT id PK
        VARCHAR first_name
        VARCHAR last_name
        VARCHAR email UK_nullable
        VARCHAR phone_primary
        VARCHAR phone_secondary
        VARCHAR address_street
        -- other address fields --
        VARCHAR preferred_contact_method
        TEXT relationship_notes
        BIGINT owner_user_id FK "Nullable"
        TIMESTAMP created_at
        TIMESTAMP updated_at
    }
    TAGS {
        INT id PK
        VARCHAR tag_name UK
        VARCHAR tag_color
    }
    CONTACT_TAGS {
        BIGINT contact_id PK, FK
        INT tag_id PK, FK
    }
    LEAD_SOURCES {
        INT id PK
        VARCHAR source_name UK
        VARCHAR source_type
    }
    PIPELINE_STATUSES {
        INT id PK
        VARCHAR status_name UK
        INT stage_order
        VARCHAR status_category
    }
    LEADS {
        BIGINT id PK
        VARCHAR first_name
        VARCHAR last_name
        VARCHAR email
        VARCHAR phone_number
        INT lead_source_id FK
        INT pipeline_status_id FK
        TEXT inquiry_details
        INT lead_score
        BIGINT assigned_user_id FK "Nullable"
        BIGINT converted_contact_id FK "Nullable, UK"
        TIMESTAMP converted_at "Nullable"
        VARCHAR external_lead_id
        TIMESTAMP created_at
        TIMESTAMP updated_at
    }
    LEAD_TAGS {
        BIGINT lead_id PK, FK
        INT tag_id PK, FK
    }
    COMMUNICATION_TEMPLATES {
        BIGINT id PK
        VARCHAR template_name
        VARCHAR template_type
        VARCHAR subject "Nullable"
        TEXT body_content
        BOOLEAN is_active
        BIGINT created_by_user_id FK
        TIMESTAMP created_at
        TIMESTAMP updated_at
    }
    COMMUNICATIONS {
        BIGINT id PK
        VARCHAR communication_type
        VARCHAR direction
        VARCHAR status
        VARCHAR subject "Nullable"
        TEXT message_content
        TIMESTAMP timestamp
        BIGINT lead_id FK "Nullable"
        BIGINT contact_id FK "Nullable"
        BIGINT user_id FK "Nullable"
        BIGINT template_id FK "Nullable"
        BIGINT campaign_step_id FK "Nullable"
        VARCHAR external_message_id "Nullable"
        TIMESTAMP scheduled_time "Nullable"
    }
    EMAIL_CAMPAIGNS {
        BIGINT id PK
        VARCHAR campaign_name
        TEXT description
        BOOLEAN is_active
        VARCHAR trigger_condition
        BIGINT created_by_user_id FK
        TIMESTAMP created_at
        TIMESTAMP updated_at
    }
    CAMPAIGN_STEPS {
        BIGINT id PK
        BIGINT email_campaign_id FK
        INT step_order
        INT delay_days
        INT delay_hours
        BIGINT communication_template_id FK
        VARCHAR step_name
    }
    CAMPAIGN_SUBSCRIPTIONS {
        BIGINT id PK
        BIGINT email_campaign_id FK
        BIGINT lead_id FK "Nullable"
        BIGINT contact_id FK "Nullable"
        VARCHAR status
        BIGINT current_step_id FK "Nullable"
        TIMESTAMP next_step_due_time "Nullable"
        TIMESTAMP started_at
        TIMESTAMP completed_at "Nullable"
    }
    PROPERTIES {
        BIGINT id PK
        VARCHAR address_street
        VARCHAR address_city
        VARCHAR address_state
        VARCHAR address_zip
        -- other property fields --
        VARCHAR mls_number UK "Nullable"
        VARCHAR listing_status
        TEXT notes
        TIMESTAMP created_at
        TIMESTAMP updated_at
    }
    TRANSACTION_STATUSES {
        INT id PK
        VARCHAR status_name UK
        INT stage_order
    }
    TRANSACTIONS {
        BIGINT id PK
        VARCHAR transaction_name
        BIGINT property_id FK
        VARCHAR transaction_type
        INT transaction_status_id FK
        DATE estimated_close_date "Nullable"
        DATE actual_close_date "Nullable"
        DECIMAL price
        DECIMAL commission_percentage
        DECIMAL commission_amount
        BIGINT agent_user_id FK
        TIMESTAMP created_at
        TIMESTAMP updated_at
    }
    TRANSACTION_CONTACTS {
        BIGINT transaction_id PK, FK
        BIGINT contact_id PK, FK
        VARCHAR role PK
    }
    TRANSACTION_MILESTONES {
        BIGINT id PK
        VARCHAR milestone_name
        VARCHAR transaction_type "Nullable"
        INT default_order
        TEXT description
    }
    TRANSACTION_CHECKLIST_ITEMS {
        BIGINT id PK
        BIGINT transaction_id FK
        BIGINT milestone_id FK "Nullable"
        VARCHAR item_description
        DATE due_date "Nullable"
        TIMESTAMP completed_date "Nullable"
        BOOLEAN is_completed
        BIGINT assigned_user_id FK "Nullable"
        TEXT notes
    }
    WORKFLOWS {
        BIGINT id PK
        VARCHAR workflow_name
        VARCHAR trigger_entity
        TEXT trigger_condition
        TEXT description
        BOOLEAN is_active
        BIGINT created_by_user_id FK
        TIMESTAMP created_at
        TIMESTAMP updated_at
    }
    WORKFLOW_STEPS {
        BIGINT id PK
        BIGINT workflow_id FK
        INT step_order
        VARCHAR action_type
        JSONB action_details
        INT delay_days
        INT delay_hours
        VARCHAR step_name
    }
    TASKS {
        BIGINT id PK
        VARCHAR task_title
        TEXT description
        TIMESTAMP due_date "Nullable"
        VARCHAR status
        VARCHAR priority
        BIGINT assigned_user_id FK "Nullable"
        BIGINT created_by_user_id FK "Nullable"
        TIMESTAMP completed_at "Nullable"
        BIGINT related_lead_id FK "Nullable"
        BIGINT related_contact_id FK "Nullable"
        BIGINT related_transaction_id FK "Nullable"
        TIMESTAMP created_at
        TIMESTAMP updated_at
    }
    MARKETING_CAMPAIGNS {
        BIGINT id PK
        VARCHAR campaign_name
        VARCHAR campaign_type
        TEXT goal
        DATE start_date "Nullable"
        DATE end_date "Nullable"
        VARCHAR status
        DECIMAL budget
        BIGINT created_by_user_id FK
        TIMESTAMP created_at
        TIMESTAMP updated_at
    }
    SEGMENTS {
        BIGINT id PK
        VARCHAR segment_name
        TEXT description
        JSONB criteria_definition
        VARCHAR entity_type
        BIGINT created_by_user_id FK
        TIMESTAMP created_at
        TIMESTAMP updated_at
    }
    MARKETING_MATERIALS {
        BIGINT id PK
        VARCHAR material_name
        VARCHAR material_type
        VARCHAR file_path_or_url
        TEXT description
        VARCHAR tags
        BIGINT uploaded_by_user_id FK
        TIMESTAMP created_at
    }
    USER_DEVICES {
        BIGINT id PK
        BIGINT user_id FK
        VARCHAR device_type
        VARCHAR device_token UK
        TIMESTAMP last_login "Nullable"
        TIMESTAMP created_at
    }
    NOTIFICATIONS {
        BIGINT id PK
        BIGINT user_id FK
        TEXT message
        VARCHAR notification_type
        BOOLEAN is_read
        TIMESTAMP read_at "Nullable"
        VARCHAR related_entity_type "Nullable"
        BIGINT related_entity_id "Nullable"
        TIMESTAMP created_at
    }
    INTEGRATIONS {
        INT id PK
        VARCHAR service_name UK
        TEXT api_key "Nullable"
        TEXT api_secret "Nullable"
        TEXT oauth_token "Nullable"
        -- other integration fields --
        BOOLEAN is_enabled
        TIMESTAMP last_sync_time "Nullable"
        VARCHAR sync_status "Nullable"
        JSONB configuration_details "Nullable"
    }

    %% --- Relationships ---

    ROLES ||--o{ USERS : "assigns"
    USERS ||--o{ CONTACTS : "owns (optional)"
    USERS ||--o{ LEADS : "assigned_to (optional)"
    USERS ||--o{ TRANSACTIONS : "manages"
    USERS ||--o{ TASKS : "assigned_to (optional)"
    USERS ||--o{ TASKS : "created_by (optional)"
    USERS ||--o{ COMMUNICATIONS : "logs/sends (optional)"
    USERS ||--o{ USER_DEVICES : "has"
    USERS ||--o{ NOTIFICATIONS : "receives"
    USERS ||--o{ WORKFLOWS : "created_by"
    USERS ||--o{ EMAIL_CAMPAIGNS : "created_by"
    USERS ||--o{ MARKETING_CAMPAIGNS : "created_by"
    USERS ||--o{ SEGMENTS : "created_by"
    USERS ||--o{ MARKETING_MATERIALS : "uploaded_by"
    USERS ||--o{ COMMUNICATION_TEMPLATES : "created_by"
    USERS ||--o{ TRANSACTION_CHECKLIST_ITEMS : "assigned_to (optional)"

    CONTACTS }o--o{ TAGS : "has (via ContactTags)"
    CONTACT_TAGS ||--|| CONTACTS : "links"
    CONTACT_TAGS ||--|| TAGS : "links"

    LEADS }o--o{ TAGS : "has (via LeadTags)"
    LEAD_TAGS ||--|| LEADS : "links"
    LEAD_TAGS ||--|| TAGS : "links"

    LEAD_SOURCES ||--o{ LEADS : "sourced_from"
    PIPELINE_STATUSES ||--o{ LEADS : "has_status"
    LEADS ||--o{ CONTACTS : "converts_to (optional, 1:1)"

    LEADS ||--o{ COMMUNICATIONS : "associated_with (optional)"
    CONTACTS ||--o{ COMMUNICATIONS : "associated_with (optional)"
    COMMUNICATION_TEMPLATES ||--o{ COMMUNICATIONS : "uses (optional)"

    EMAIL_CAMPAIGNS ||--o{ CAMPAIGN_STEPS : "contains"
    CAMPAIGN_STEPS ||--o{ COMMUNICATION_TEMPLATES : "uses_template"
    CAMPAIGN_STEPS ||--o{ COMMUNICATIONS : "triggers (optional)"
    EMAIL_CAMPAIGNS ||--o{ CAMPAIGN_SUBSCRIPTIONS : "has_subscription"
    CAMPAIGN_SUBSCRIPTIONS ||--|| LEADS : "subscribes (optional)"
    CAMPAIGN_SUBSCRIPTIONS ||--|| CONTACTS : "subscribes (optional)"
    CAMPAIGN_SUBSCRIPTIONS ||--o{ CAMPAIGN_STEPS : "at_step (optional)"

    PROPERTIES ||--o{ TRANSACTIONS : "relates_to"
    TRANSACTION_STATUSES ||--o{ TRANSACTIONS : "has_status"
    TRANSACTIONS }o--o{ CONTACTS : "involves (via TransactionContacts)"
    TRANSACTION_CONTACTS ||--|| TRANSACTIONS : "links"
    TRANSACTION_CONTACTS ||--|| CONTACTS : "links"
    TRANSACTIONS ||--o{ TRANSACTION_CHECKLIST_ITEMS : "has_checklist"
    TRANSACTION_MILESTONES ||--o{ TRANSACTION_CHECKLIST_ITEMS : "defines (optional)"

    WORKFLOWS ||--o{ WORKFLOW_STEPS : "contains"
    %% Workflow execution logic links steps to tasks/communications - not easily shown statically

    TASKS ||--o{ LEADS : "related_to (optional)"
    TASKS ||--o{ CONTACTS : "related_to (optional)"
    TASKS ||--o{ TRANSACTIONS : "related_to (optional)"

    %% Marketing relationships are often dynamic via segments/rules
    SEGMENTS --o{ CONTACTS : "targets (dynamic)" %% Dashed line for conceptual link

